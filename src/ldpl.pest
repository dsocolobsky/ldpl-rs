WHITESPACE = _{ " " | "\t" }
COMMENT   = _{"#" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }

scalar_type    = { "number" | "text" }
container_type = { "list" | "map" }
data_type      = _{ scalar_type | container_type }

number = @{ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)* }
string = @{(ASCII_ALPHANUMERIC | WHITESPACE)*}
string_quoted = _{ "\"" ~ string ~ "\"" }
value  = _{ number | string }

identifier           = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC)* }
variable_declaration = { identifier ~ "is" ~ data_type }
store                = { "store" ~ value ~ "in" ~ identifier }
display              = { "display " ~ (identifier | string_quoted)+ }

comparison_op = {
    "is less than or equal to" | "is greater than or equal to" |
    "is equal to" | "is not equal to" | "is less than" | "is greater than"
}
comparison_exp = _{ string_quoted | number | identifier }
comparison = { comparison_exp ~ comparison_op ~ comparison_exp }

guard = {comparison }
block = { (expression ~ NEWLINE)* }
else_if_statement = {
    "else if" ~ guard ~ "then" ~ NEWLINE ~
    block
}
else_statement = {
    "else" ~ NEWLINE ~
    block
}
if_statement = {
    "if" ~ guard ~ "then" ~ NEWLINE ~
    block ~
    (else_if_statement)* ~
    (else_statement)? ~
    "end if"
}

expression = _{ display | store | variable_declaration | if_statement }

file = _{ SOI ~ NEWLINE* ~ (expression ~ NEWLINE+)* ~ expression? ~ EOI }
